annotation_north_arrow(location = "bl",
which_north="true",
pad_x = unit(0.2, "in"),
pad_y = unit(0.7, "in"),
style=north_arrow_fancy_orienteering(fill = c("white", "grey60")))+
annotation_scale(location = "bl",
bar_cols = c("grey60", "white"),
text_family = "ArcherPro Book")+
labs(fill= "Altitud (msnm)", col= "Especies")
ggcorrplot(mat_cor, #matriz de correlaci�n
hc.order = FALSE, #si se ordena por un m�todo (HCLUST) o por default
type = "lower", #si se muestra toda o una secci�n
lab = TRUE, #si se agregan los d�gitos
lab_size = 3, #tama�o de los d�gitos
colors= c("blue", "white", "red") #vector de colores
)
p_temp_spp <- ggplot(df_env, aes(x = bio_01, y = species, fill = species)) +
geom_density_ridges(alpha = 0.8, scale = 1.2, color = "white") +
scale_fill_manual(values = c("#8d62fc", "#fc8d62"))+
labs(
x = "Temperatura media anual (BIO1)",
y = "",
fill = "Especie",
title = "Distribuci�n de la temperatura media anual por especie"
)+
scale_x_continuous(limits = c(5, 30), breaks = seq(0, 30, 5))+
theme_ridges()+
theme(legend.position = "none")
p_precip_spp <- ggplot(df_env, aes(x = bio_12, y = species, fill = species)) +
geom_density_ridges(alpha = 0.8, scale = 1.2, color = "white") +
scale_fill_manual(values = c("#8d62fc", "#fc8d62"))+
labs(
x = "Precipitaci�n anual (BIO12)",
y = "",
fill = "Especie",
title = "Distribuci�n de la precipitaci�n anual por especie"
)+
theme_ridges()+
theme(legend.position = "none")
df_pse_lep_env <- extract(env, Pse_lep_sp)
df_pse_lep_env$species <- c("Pseudoeurycea leprosa")
df_inc_val_env <- extract(env, Inc_val_sp)
df_inc_val_env
env <- worldclim_global(var = "bio", res = 10, path = "datos_wc")
library(car)
library(emmeans)
library(ggplot2)
install.packages("car")
library(car)
library(emmeans)
library(ggplot2)
hoja <- read.csv("hojas.csv")
## verificamois las variables
str(hoja)
### Transformamos variables a factores y numericos segun corresponda##
hoja$ancho <- as.numeric(hoja$ancho)
hoja$planta <- as.factor(hoja$planta)
## verificamois de nuevo las variables
str(hoja)
### exploramos rapidamente los datos con summary
summary(hoja)
### revisamos la distribución de mi variable dependiente
par(mfrow=c(1,1))
hist(hoja$ancho,
main = "Histograma de ancho de las hojas",
xlab = "tamaño",
col = "coral2", border = "black")
### vemos histograma por zonas
ggplot(Hojitas, aes(x = Largo)) +
geom_histogram(binwidth = 0.3, fill = "red3", color = "black") +
facet_wrap(~ planta, scales = "free") +
labs(title = "Histograma de tamaño del largo",
x = "largo cm", y = "plantas")
### Vizualicación de datos en boxplot
boxplot(ancho ~ planta, data = hoja,
col = "gold", main = "tamaño del ancho de las plantas",
xlab = "planta", ylab = "ancho cm")
### reordenamos el eje X
hoja$planta <- factor(hoja$planta,
levels = c("A", "B", "C", "D"))
library(ggplot2)
library(effects)
library(bbmle)
library(AICcmodavg)
library(emmeans)
library(Rmisc)
YYY <- read.csv("crecimiento_plantas6.csv", sep=",", header=T)
str(YYY)
YYY$luz <- as.factor(YYY$luz)
YYY$fertilizante <- as.factor(YYY$fertilizante)
summary(YYY)
boxplot(crecimiento~fertilizante, data=YYY)
mod1 <-lm(crecimiento~luz * fertilizante, data=YYY)
par(mfrow=c(2,2))
plot(mod1)
shapi1 <- shapiro.test(residuals(mod1))
YYY$creci_LOG<- log(YYY$crecimiento)
mod2 <- lm(creci_LOG~fertilizante * luz, data=YYY)
YYY$creci_raiz <- sqrt(YYY$crecimiento)
mod3 <- lm(creci_raiz~fertilizante * luz, data=YYY)
shapi2 <- shapiro.test(residuals(mod2))
shapi3 <- shapiro.test(residuals(mod3))
library(rgbif) #descargar datos de ocurrencias
library(tidyverse) #procesamiento de datos
library(sf) #manipulaci?n  de datos vectoriales
library(rworldxtra) #datos vectoriales de los paises del mundo
library(geodata) #datos geoespaciales complemenatarios
library(ggspatial)#auxiliar para visualizar datos espaciales
library(terra) #datos raster
library(tidyterra) #maniipulaci?n de raster
library(paletteer) #colores
library(ggcorrplot) #diagrama de correlaciones
library(ggridges) #gr?fico de ridges
library(plotly) #gr?ficos avanzados
library(patchwork) #organizar gr?ficos
library(magick) #para manejo de imagenes
library(grid)
#EXTRAER DATOS DE FOCAS DE CADA PAÍS DE NORTE AMÉRICA
#Vitulina MX
foca1mx <- occ_search(scientificName = "Phoca vitulina Linnaeus",
hasCoordinate = TRUE,
hasGeospatialIssue = FALSE,
country = "MX"
)$data
foca1mx <- foca1mx %>%
filter(scientificName == "Phoca vitulina Linnaeus, 1758") #eliminar subespecie
#richardii MX
foca2mx <- occ_search(scientificName = "Phoca vitulina richardii",
hasCoordinate = TRUE,
hasGeospatialIssue = FALSE,
country = "MX"
)$data
unique(foca1mx$countryCode)
#Vitulina CA
foca1ca <- occ_search(scientificName = "Phoca vitulina Linnaeus ",
hasCoordinate = TRUE,
hasGeospatialIssue = FALSE,
country = "CA"
)$data
foca1ca <- foca1ca %>%
filter(scientificName == "Phoca vitulina Linnaeus, 1758") #eliminar subespecie
unique(foca1ca$countryCode)
#richardii CA
foca2ca <- occ_search(scientificName = "Phoca vitulina richardii",
hasCoordinate = TRUE,
hasGeospatialIssue = FALSE,
country = "CA"
)$data
#Vitulina US
foca1us <- occ_search(scientificName = "Phoca vitulina Linnaeus ",
hasCoordinate = TRUE,
hasGeospatialIssue = FALSE,
country = "US"
)$data
foca1us <- foca1us %>%
filter(scientificName == "Phoca vitulina Linnaeus, 1758")
unique(foca1us$countryCode)
#richardii US
foca2us <- occ_search(scientificName = "Phoca vitulina richardii",
hasCoordinate = TRUE,
hasGeospatialIssue = FALSE,
country = "US"
)$data
# Añadir una columna para el país
foca1mx <- foca1mx %>% mutate(country = "Mexico", species = "Phoca vitulina Linnaeus")
foca1ca <- foca1ca %>% mutate(country = "Canada", species = "Phoca vitulina Linnaeus")
foca1us <- foca1us %>% mutate(country = "USA", species = "Phoca vitulina Linnaeus")
foca2mx <- foca2mx %>% mutate(country = "Mexico", species = "Phoca vitulina")
foca2ca <- foca2ca %>% mutate(country = "Canada", species = "Phoca vitulina")
foca2us <- foca2us %>% mutate(country = "USA", species = "Phoca vitulina")
#Unir bases de cada país por foca
foca1_NorteA <- bind_rows(foca1mx, foca1ca, foca1us)
foca2_NorteA <- bind_rows(foca2mx, foca2ca, foca2us)
#añadir columna con spp y subespecie
foca1_NorteA <- foca1_NorteA %>% mutate(species = "Phoca vitulina ")
foca2_NorteA <- foca2_NorteA %>% mutate(species = "Phoca vitulina richardii")
#filtrar por tipo de registro
unique(foca1_NorteA$basisOfRecord)
foca1_NorteA %>%
ggplot(aes(x= basisOfRecord, fill= basisOfRecord))+
geom_bar()+
coord_flip()+
theme(legend.position = "none")
foca1_NorteA_sf <- foca1_NorteA %>%
st_as_sf(coords = c("decimalLongitude", "decimalLatitude"), crs= 4326)
foca2_NorteA_sf <- foca2_NorteA %>%
st_as_sf(coords = c("decimalLongitude", "decimalLatitude"), crs= 4326)
#CAPA RASTER Y ARCHIVOS VECTORIALES CLIMA
alt <- worldclim_global(var="elev", res=5, path=tempdir())
data(countriesHigh)
Mundo <- st_as_sf(countriesHigh)
View(countriesHigh)
View(foca1_NorteA)
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = scientificName, y = bio01, fill = especie)) +
geom_boxplot() +
labs(x = "Especie",
y = "Temperatura media anual (BIO1)",
title = "Comparación de condiciones bioclimáticas entre especies") +
theme_minimal()
alt
name(alt)
datos_combinados <- cbind(foca1_NorteA, alt)
#graficos de exploracion
ggplot(datos_combinados, aes(x = scientificName, y = bio01, fill = especie)) +
geom_boxplot() +
labs(x = "Especie",
y = "Temperatura media anual (BIO1)",
title = "Comparación de condiciones bioclimáticas entre especies") +
theme_minimal()
datos_combinados <- cbind(foca1_NorteA, alt)
View(foca1_NorteA)
datos_combinados
cbind(foca1_NorteA, alt)
alt
Mundo
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince,)) +
geom_boxplot() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince,)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = 2))
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = .5))
View(foca1_NorteA_sf)
ggplot(foca1_NorteA_sf, aes(x = altitud, y = scientificName, fill = species)) +
geom_density_ridges(alpha = 0.6) +
labs(title = "Distribución de Altitud de Registros de Focas",
x = "Altitud (msnm)",
y = "Especie") +
theme_ridges() +
theme(legend.position = "none")
ggplot(foca1_NorteA_sf, aes(x = decimalLatitude, y = scientificName, fill = species)) +
geom_density_ridges(alpha = 0.6) +
labs(title = "Distribución de Altitud de Registros de Focas",
x = "Altitud (msnm)",
y = "Especie") +
theme_ridges() +
theme(legend.position = "none")
ggplot(foca1_NorteA, aes(x = decimalLatitud, y = scientificName, fill = species)) +
geom_density_ridges(alpha = 0.6) +
labs(title = "Distribución de Altitud de Registros de Focas",
x = "Altitud (msnm)",
y = "Especie") +
theme_ridges() +
theme(legend.position = "none")
ggplot(foca1_NorteA, aes(x = decimalLatitude, y = scientificName, fill = species)) +
geom_density_ridges(alpha = 0.6) +
labs(title = "Distribución de Altitud de Registros de Focas",
x = "Altitud (msnm)",
y = "Especie") +
theme_ridges() +
theme(legend.position = "none")
ggplot(foca1_NorteA, aes(x = decimalLatitude, y = scientificName, fill = scientificName)) +
geom_density_ridges(alpha = 0.6) +
labs(title = "Distribución de Altitud de Registros de Focas",
x = "Altitud (msnm)",
y = "Especie") +
theme_ridges() +
theme(legend.position = "none")
ggplot(foca1_NorteA, aes(x = scientificName, y = decimalLatitude, fill = scientificName)) +
geom_boxplot(alpha = 0.7) +
labs(title = "Altitud de Registros de Focas por Especie en Baja California",
x = "Especie",
y = "Altitud (msnm)",
fill = "Especie") +
theme_minimal()
ggplot(foca1_NorteA, aes(x = decimalLatitude, y = scientificName, fill = scientificName)) +
geom_density_ridges(alpha = 0.6) +
labs(title = "Distribución de Altitud de Registros de Focas",
x = "Altitud (msnm)",
y = "Especie") +
theme_ridges() +
theme(legend.position = "none")
ggplot(foca1_NorteA, aes(x = year, y = decimalLatitude, color = scientificName)) +
geom_point(alpha = 0.6) + # Usa puntos para representar cada registro
geom_smooth(method = "loess", se = FALSE) + # Opcional: añade una línea de tendencia para ver el patrón
labs(title = "Altitud de Registros a lo largo del Tiempo en Baja California",
x = "Año de Registro",
y = "Altitud (msnm)",
color = "Especie") +
theme_minimal()
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = .5))
ggplot(foca1_NorteA, aes(x = decimalLatitude, y = scientificName, fill = scientificName)) +
geom_density_ridges(alpha = 0.6) +
labs(title = "Distribución de Altitud de Registros de Focas",
x = "Altitud (msnm)",
y = "Especie") +
theme_ridges() +
theme(legend.position = "none")
ggplot(foca1_NorteA, aes(x = scientificName, y = decimalLatitude, fill = scientificName)) +
geom_boxplot(alpha = 0.7) +
labs(title = "Altitud de Registros de Focas por Especie en Baja California",
x = "Especie",
y = "Altitud (msnm)",
fill = "Especie") +
theme_minimal()
ggplot(foca1_NorteA, aes(x = year, y = decimalLatitude, color = scientificName)) +
geom_point(alpha = 0.6) + # Usa puntos para representar cada registro
geom_smooth(method = "loess", se = FALSE) + # Opcional: añade una línea de tendencia para ver el patrón
labs(title = "Altitud de Registros a lo largo del Tiempo en Baja California",
x = "Año de Registro",
y = "Altitud (msnm)",
color = "Especie") +
theme_minimal()
ggplot(foca1_NorteA, aes(x = year, y = decimalLatitude, color = scientificName)) +
geom_point(alpha = 0.6) + # Usa puntos para representar cada registro
geom_smooth(method = "loess", se = FALSE) + # Opcional: añade una línea de tendencia para ver el patrón
labs(title = "Altitud de Registros a lo largo del Tiempo de foca virtulina",
x = "Año de Registro",
y = "Altitud (msnm)",
color = "Especie") +
theme_minimal()
bioclim <- getData("worldclim", var="bio", res=10)  # BIO1-BIO19
bioclim <- getData("worldclim", var="bio", res=10)  # BIO1-BIO19
library(rgbif) #descargar datos de ocurrencias
library(tidyverse) #procesamiento de datos
library(sf) #manipulaci?n  de datos vectoriales
library(rworldxtra) #datos vectoriales de los paises del mundo
library(geodata) #datos geoespaciales complemenatarios
library(ggspatial)#auxiliar para visualizar datos espaciales
library(terra) #datos raster
library(tidyterra) #maniipulaci?n de raster
library(paletteer) #colores
library(ggcorrplot) #diagrama de correlaciones
library(ggridges) #gr?fico de ridges
library(plotly) #gr?ficos avanzados
library(patchwork) #organizar gr?ficos
library(magick) #para manejo de imagenes
library(grid)
bioclim <- getData("worldclim", var="bio", res=10)  # BIO1-BIO19
bioclim <- getaData("worldclim", var="bio", res=10)  # BIO1-BIO19
bioclim <- geoData("worldclim", var="bio", res=10)  # BIO1-BIO19
bioclim <- geoData("worldclim", var="bio", res=10)  # BIO1-BIO19
bioclim <- geodata("worldclim", var="bio", res=10)  # BIO1-BIO19
#CAPA RASTER Y ARCHIVOS VECTORIALES CLIMA
alt <- worldclim_global(var="elev", res=5, path=tempdir())
foca2_NorteA_sf <- foca2_NorteA %>%
st_as_sf(coords = c("decimalLongitude", "decimalLatitude"), crs= 4326)
datos_sp <- SpatialPoints(foca1_NorteA_sf, proj4string = crs(bioclim))
#distribucion espacial
ggplot(foca1_NorteA, aes(x = decimalLongitude, y = decimalLatitude, color = scientificName)) +
geom_point(alpha = 0.6, size = 2) +
coord_fixed() +
theme_minimal() +
labs(title = "Distribución espacial de registros")
ggplot(foca1_NorteA, aes(x = publishingCountry, fill = especie)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(x="País", y="Número de registros")
ggplot(foca1_NorteA, aes(x = publishingCountry, fill = scientificName)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(x="País", y="Número de registros")
#PAIS DE OBSERVACION
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = .5))
ggplot(foca1_NorteA, aes(x = publishingCountry, fill = publishingCountry)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(x="País", y="Número de registros")
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = .5))
#PAIS DE OBSERVACION
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = .5))
ggplot(foca1_NorteA, aes(x = publishingCountry, fill = publishingCountry)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(x="País", y="Número de registros")
ggplot(foca1_NorteA, aes(x = year, y = decimalLatitude, color = scientificName)) +
geom_point(alpha = 0.6) + # Usa puntos para representar cada registro
geom_smooth(method = "loess", se = FALSE) + # Opcional: añade una línea de tendencia para ver el patrón
labs(title = "Altitud de Registros a lo largo del Tiempo de foca virtulina",
x = "Año de Registro",
y = "Altitud (msnm)",
color = "Especie") +
theme_minimal()
#distribucion espacial
ggplot(foca1_NorteA, aes(x = decimalLongitude, y = decimalLatitude, color = scientificName)) +
geom_point(alpha = 0.6, size = 2) +
coord_fixed() +
theme_minimal() +
labs(title = "Distribución espacial de registros")
ggplot(foca1_NorteA, aes(x = year, y = decimalLatitude, color = scientificName)) +
geom_point(alpha = 0.6) + # Usa puntos para representar cada registro
geom_smooth(method = "loess", se = FALSE) + # Opcional: añade una línea de tendencia para ver el patrón
labs(title = "Altitud de Registros a lo largo del Tiempo de foca virtulina",
x = "Año de Registro",
y = "Altitud (msnm)",
color = "Especie") +
theme_minimal()
ggplot(foca1_NorteA, aes(x = publishingCountry, fill = publishingCountry)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(x="País", y="Número de registros")
#graficos de exploracion
ggplot(foca1_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = .5))
ggplot(foca2_NorteA, aes(x = stateProvince, fill = stateProvince)) +
geom_bar() +
labs(x = "estado de observacion",
title = "estados en donde se observo la foca virtulina linnaeus") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90,
hjust = .5))
ggplot(foca2_NorteA, aes(x = publishingCountry, fill = publishingCountry)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(x="País", y="Número de registros")
ggplot(foca2_NorteA, aes(x = year, y = decimalLatitude, color = scientificName)) +
geom_point(alpha = 0.6) + # Usa puntos para representar cada registro
geom_smooth(method = "loess", se = FALSE) + # Opcional: añade una línea de tendencia para ver el patrón
labs(title = "Altitud de Registros a lo largo del Tiempo de foca virtulina",
x = "Año de Registro",
y = "Altitud (msnm)",
color = "Especie") +
theme_minimal()
ggplot(foca2_NorteA, aes(x = decimalLongitude, y = decimalLatitude, color = scientificName)) +
geom_point(alpha = 0.6, size = 2) +
coord_fixed() +
theme_minimal() +
labs(title = "Distribución espacial de registros")
setwd("C:/Users/gaelv/Downloads/INFORMATICA_E4-20251028T212056Z-1-001")
setwd("C:/Users/gaelv/Downloads/INFORMATICA_E4-20251028T212056Z-1-001/INFORMATICA_E4")
